@import 'functions'

// @type Hash
Color = {
  GREEN: #00ad45
  Greys: {
    DARK: #222
    LIGHT: #aaa
    LIGHTER: #ddd
    MEDIUM: #555
    OFF_WHITE: #f7f7f7
  }
  Themes: {
    DARK: #282c35
    SEPIA: #f8f2e3
  }
  WARNING: #c00
}

// @type Hash
Elements = {
  Arrow: {
    MENU: 10px
    TOGGLE: 5px
  }
  Button: {
    HEIGHT: px_to_rem(40)
    ROW_HEIGHT: px_to_rem(96)
  }
  Card: {
    CORNER_RADIUS: 8px
    PADDING: px_to_rem(24)
  }
  Header: {
    HEIGHT: {
      Base: px_to_rem(44)
      Medium: px_to_rem(60)
    }
  }
  Input: {
    HEIGHT: px_to_rem(32)
    WIDTH: px_to_rem(88)
  }
  Menu: {
    CORNER_RADIUS: 4px
    ITEM_SIZE: px_to_rem(40)
    PADDING: px_to_rem(16)
  }
  Table: {
    MAX_WIDTH: px_to_rem(640)
    PADDING_X: px_to_em(12)
    PADDING_X_LARGE: px_to_em(16)
    PADDING_Y: px_to_em(8)
  }
  UserValues: {
    MAX_WIDTH: px_to_rem(240)
  }
}

// @type Hash
FontSize = {
  Base: {
    HEADER: px_to_rem(16)
    INPUT: px_to_rem(20)
    MENU_ITEM: px_to_em(22)
    TABLE: px_to_rem(13)
    VALUES_TOTAL: px_to_rem(32)
    SMALLPRINT: px_to_rem(12)
    COPYRIGHT: px_to_rem(14)
  }
  Medium: {
    HEADER: px_to_rem(20)
    TABLE: px_to_rem(15)
  }
}

// @type Hash
Transition = {
  DEFAULT: .3s
  DRAWER: .5s
}

// @const String
GRID_GAP = px_to_rem(16)

// @const String
GRID_GAP_MEDIUM = px_to_rem(24)


// -----------------------------------------------------------------------------
// Calculated constants and breakpoints

// @type String
VALUES_GRID_WIDTH = Elements.UserValues.MAX_WIDTH + (2 * Elements.Card.PADDING)

// @type String
CONTENT_WIDTH_LARGE = (Elements.UserValues.MAX_WIDTH + (2 * Elements.Card.PADDING)) + Elements.Table.MAX_WIDTH + GRID_GAP_MEDIUM

// @type String
BREAKPOINT_SMALL_UNITS = px_to_rem(420)

// @type Hash
Breakpoint = {
  SMALL:  'screen and (min-width: %s)' % BREAKPOINT_SMALL_UNITS
  MEDIUM: 'screen and (min-width: %s)' % (Elements.Table.MAX_WIDTH + (GRID_GAP_MEDIUM * 2))
  LARGE:  'screen and (min-width: %s)' % (CONTENT_WIDTH_LARGE + (GRID_GAP_MEDIUM * 2))
}
