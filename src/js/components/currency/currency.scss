@use 'sass:math';
@use '../../../styles/const';
@use '../../../styles/utils';

:host {
  position: relative;
}

* {
  box-sizing: border-box;
}

// Reset default element styles.
button,
input {
  appearance: none;
  background: 0;
  border: 0;
  outline: 0;
}

button {
  align-items: center;
  appearance: none;
  block-size: const.$button-size;
  border: const.$outline-size solid transparent;
  border-radius: math.div(const.$button-size, 2);
  color: var(--on-surface);
  cursor: pointer;
  display: flex;
  font-family: 'Avenir Variable', sans-serif;
  font-size: .875em;
  font-variation-settings: 'wght' 600;
  justify-content: center;
  line-height: 1;
  outline: 0;
  padding-block: 0;
  padding-inline: 1.5rem;
  white-space: nowrap;

  &:focus {
    background-color: var(--surface2);
    border-color: var(--outline);
  }

  @media (any-hover: hover) {
    transition: utils.transition(background-color);

    &:hover,
    &[aria-expanded='true']:hover {
      background-color: var(--surface2);
    }
  }
}

button[aria-expanded='true'] {
  background-color: var(--surface3);
  // border-color: var(--on-surface);
  // color: var(--surface2);
}

svg {
  fill: currentColor;
  inline-size: 1.5rem;
}

// Currency symbol for button and options.
:is(button, li) > span {
  pointer-events: none;
}

// Currency menu.
form {
  background-color: var(--surface3);
  border-radius: 1rem; //
  inset-block: 3.5rem auto; //
  position: absolute;
  transform: translateY(.25rem);
  transition: utils.transition(opacity, transform);
}

form[aria-hidden='true'] {
  opacity: 0;
  pointer-events: none;
  transform: translateY(-.25rem);
}

// Currency options via list of radio buttons.
ul {
  list-style: none;
  margin-block: 1rem;
  padding: 0;
}

label {
  align-items: center;
  cursor: pointer;
  display: flex;
  gap: 0 .5em;
  padding-block: .5rem; //
  padding-inline: 0 2rem; //

  &:focus,
  &:checked {
    background-color: var(--surface2);
  }

  @media (any-hover: hover) {
    transition: utils.transition(background-color, border-color);

    &:hover {
      background-color: var(--surface1);
      // border-color: var(--surface1);
    }

    // &:hover:checked {
    //   border-color: var(--outline);
    // }
  }
}

label:has(> span) {
  background-color: red;
}

input {
  margin: 0;
}

input + span {
  display: inline-grid;
  inline-size: 1.5rem;
  place-content: center;
}
