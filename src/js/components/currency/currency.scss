@use 'sass:math';
@use '../../../styles/const';
@use '../../../styles/utils';

:host {
  position: relative;
}

* {
  box-sizing: border-box;
}

// Reset default element styles.
button,
input {
  appearance: none;
  background: 0;
  border: 0;
  color: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
}

button {
  background-color: var(--surface2);
  block-size: const.$button-size;
  border: const.$outline-size solid transparent;
  border-radius: math.div(const.$button-size, 2);
  cursor: pointer;
  display: grid;
  font-size: 1.5rem;
  inline-size: const.$button-size;
  outline: 0;
  place-items: center;

  &:focus {
    border-color: var(--outline);
  }

  &[aria-expanded='true'] {
    background-color: var(--surface3);
  }

  @media (any-hover: hover) {
    transition: utils.transition(background-color, color);

    &:hover,
    &[aria-expanded='true']:hover {
      background-color: var(--surface3);
      border-color: transparent;
    }
  }
}

// Currency menu.
dialog {
  background-color: var(--surface2);
  block-size: 0;
  border: 0;
  border-radius: .5rem;
  display: block;
  margin-block: .5rem 0;
  overflow: hidden;
  padding: 0;
  transform: translateX(calc(-100% + const.$button-size));
  transition: utils.transition(opacity);
}

dialog[open] {
  block-size: auto;
  opacity: 1;
}

dialog,
dialog[data-closing] {
  opacity: 0;
}

ul {
  list-style: none;
  margin-block: .5rem;
  padding: 0;
}

label {
  align-items: center;
  block-size: 2.75rem;
  color: var(--on-surface);
  cursor: pointer;
  display: flex;
  padding-inline: .25rem 1.5rem;

  &:focus,
  &[data-checked] {
    background-color: var(--surface3);
  }

  @media (any-hover: hover) {
    transition: utils.transition(background-color);

    &:hover {
      background-color: var(--surface1);
    }

    &:hover[data-checked] {
      background-color: var(--surface3);
    }
  }
}

input {
  inline-size: 0;
}

span {
  white-space: nowrap;
}

.symbol {
  display: inline-grid;
  font-size: 1.5rem;
  inline-size: 2.5rem;
  place-content: center;
}
