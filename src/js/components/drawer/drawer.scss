@use 'sass:map';
@use 'sass:math';
@use '../../../styles/const';
@use '../../../styles/utils';

:host {
  display: grid;
  grid: 'drawer' 'button' 1fr;
}

button {
  align-items: center;
  appearance: none;
  background-color: var(--color-theme);
  block-size: const.$button-size;
  border: 0;
  border-radius: math.div(const.$button-size, 2);
  color: var(--color-on-theme);
  cursor: pointer;
  display: flex;
  font-family: 'Avenir Variable', sans-serif;
  font-size: .875em;
  font-variation-settings: 'wght' 600;
  grid-area: button;
  justify-content: center;
  line-height: 1;
  margin: clamp(2rem, 2rem + 1vw, 3rem);
  outline: 0;
  padding-block: 0;
  padding-inline: 1.5rem;
  place-self: end center;
  white-space: nowrap;

  &:focus,
  &:active {
    background-color: var(--color-surface2);
    color: var(--color-on-surface);
  }
}

@media (any-hover: hover) {
  button {
    transition: utils.transition(background-color, color);

    &:hover {
      background-color: var(--color-surface2);
      color: var(--color-on-surface);
    }
  }
}

[id='drawer'] {
  box-sizing: border-box;
  grid-area: drawer;
  overflow: hidden;
  transition: block-size .4s ease-out;
}

// Always hide the button and show the drawer on large screens.
// '!important' required to override inline styles set via JS.
@media #{map.get(const.$breakpoint, 'medium')} {
  button {
    display: none;
  }

  [id='drawer'] {
    block-size: auto !important;
  }
}
