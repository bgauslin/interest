@use 'sass:map';
@use 'sass:math';
@use '../../../styles/const';
@use '../../../styles/utils';

:host {
  display: block;

  @media #{map.get(const.$breakpoint, 'small')} {
    background-color: var(--color-surface);
    border-radius: const.$card-radius;
  }
}

::slotted(h1) {
  font-size: clamp(1rem, 1rem + 1vw, 1.5rem);
  margin: 0;
  padding-block: 2rem;
  padding-inline: const.$card-padding;
  text-align: center;
}

:is(form, ul, li, .total) {
  display: grid;
}

:is(ul, li) {
  gap: const.$field-gap;
}

:is(form, ul) {
  grid: auto-flow / 1fr;
}

form {
  gap: 2rem 0;
  padding-inline: const.$card-padding;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;

  @media #{map.get(const.$breakpoint, 'small')} {
    grid: auto-flow / 1fr 1fr;
  }

  @media #{map.get(const.$breakpoint, 'medium')} {
    grid: auto-flow / 1fr;
  }
}

li {
  align-items: center;
  grid: 'input label' / 1fr 1fr;

  @media #{map.get(const.$breakpoint, 'small')} {
    &:nth-child(odd) {
      place-self: end;
    }

    &:nth-child(even) {
      place-self: start;
    }
  }

  @media #{map.get(const.$breakpoint, 'medium')} {
    &:nth-child(n) {
      place-self: center;
    }
  }
}

label {
  grid-area: label;
  line-height: 1;
  min-inline-size: 8rem;
  opacity: .8;
  pointer-events: none;
  white-space: nowrap;
}

label[for='rate']::before {
  content: '% ';
}

input {
  appearance: none;
  background-color: var(--color-surface1);
  block-size: 2rem;
  border: 2px solid transparent;
  border-radius: 4px;
  color: var(--color-on-surface);
  font-family: 'Avenir Variable', sans-serif;
  font-size: inherit;
  font-variation-settings: 'wght' 500;
  grid-area: input;
  inline-size: const.$field-input-size;
  justify-self: end;
  line-height: 1;
  margin: 0;
  outline: 0;
  padding-inline: .5rem;
  text-align: end;

  &:focus {
    background-color: var(--color-surface2);
    border-color: var(--color-theme);
  }

  &:focus:invalid {
    border-color: var(--color-error);
  }
}

.total {
  grid: 1fr / auto-flow;
  padding-block: 2rem;
  padding-inline: const.$card-padding;
  place-content: center;
  place-items: center;
  transition: utils.transition(opacity);
}

.total[aria-hidden='true'] {
  opacity: 0;
  visibility: hidden;
}

.amount {
  block-size: const.$amount-size;
  color: var(--color-theme);
  font-size: const.$amount-size;
  line-height: const.$amount-size;
  max-inline-size: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
