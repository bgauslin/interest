@use 'sass:map';
@use 'const';

html {
  -webkit-tap-highlight-color: transparent;
  text-size-adjust: none;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  background-color: var(--color-surface1);
  color: var(--color-on-surface);
  font-family: 'Avenir Variable', sans-serif;
  font-variation-settings: 'wght' 500;
  margin: 0;
  min-block-size: 100vh;
  touch-action: manipulation;
}

@supports (min-block-size: 100dvh) {
  body {
    min-block-size: 100dvh;
  }
}

main {
  display: grid;
  gap: clamp(#{const.$gap-min}, #{const.$gap-min} + 1vw, #{const.$gap-max});
  grid: 'values' 'drawer' minmax(auto, 1fr) / 1fr;
  margin-inline: auto;
  max-inline-size: const.$content-width-large;
  padding-block: 0 env(safe-area-inset-bottom);
  padding-inline: env(safe-area-inset-left) env(safe-area-inset-right);

  @media #{map.get(const.$breakpoint, large)} {
    gap: 0 const.$gap-max;
    grid: '. .' 3rem 'values drawer' 1fr '. .' 3rem / #{const.$values-grid-width} 1fr;
  }
}

app-values {
  grid-area: values;
}

// Drawer should be hidden until it has content.
app-drawer {
  grid-area: drawer;

  &[aria-hidden='true'] {
    opacity: 0;
    visibility: hidden;
  }
}